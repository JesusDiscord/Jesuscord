"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.init=init,exports.hasInit=void 0;var _electron=require("electron"),_utils=require("./utils"),_mainScreen=require("./mainScreen"),_ipcMain=_interopRequireDefault(require("./ipcMain"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}let lastIndex,appIcons,hasInit=!1;function init(){if("win32"!==process.platform)return;if(hasInit)return void console.warn("appBadge: Has already init! Cancelling init.");exports.hasInit=hasInit=!0,lastIndex=null,appIcons=[];for(let e=1;e<=11;e++)appIcons.push((0,_utils.exposeModuleResource)("app/images/badges",`badge-${e}.ico`));_ipcMain.default.on("APP_BADGE_SET",(e,n)=>setAppBadge(n))}function setAppBadge(e){const n=_electron.BrowserWindow.fromId((0,_mainScreen.getMainWindowId)()),{index:i,description:t}=getOverlayIconData(e);lastIndex!==i&&(null==i?n.setOverlayIcon(null,t):n.setOverlayIcon(appIcons[i],t),lastIndex=i)}function getOverlayIconData(e){if(-1===e)return{index:10,description:"Unread messages"};if(0===e)return{index:null,description:"No Notifications"};const n=Math.max(1,Math.min(e,10))-1;return{index:n,description:n+" notifications"}}exports.hasInit=hasInit;