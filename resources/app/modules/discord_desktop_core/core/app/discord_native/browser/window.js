"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.injectGetWindow=injectGetWindow;const electron=require("electron"),process=require("process"),{WINDOW_BLUR:WINDOW_BLUR,WINDOW_CLOSE:WINDOW_CLOSE,WINDOW_FOCUS:WINDOW_FOCUS,WINDOW_MAXIMIZE:WINDOW_MAXIMIZE,WINDOW_MINIMIZE:WINDOW_MINIMIZE,WINDOW_RESTORE:WINDOW_RESTORE,WINDOW_FLASH_FRAME:WINDOW_FLASH_FRAME,WINDOW_TOGGLE_FULLSCREEN:WINDOW_TOGGLE_FULLSCREEN,WINDOW_SET_BACKGROUND_THROTTLING:WINDOW_SET_BACKGROUND_THROTTLING,WINDOW_SET_PROGRESS_BAR:WINDOW_SET_PROGRESS_BAR,WINDOW_IS_ALWAYS_ON_TOP:WINDOW_IS_ALWAYS_ON_TOP,WINDOW_SET_ALWAYS_ON_TOP:WINDOW_SET_ALWAYS_ON_TOP}=require("../common/constants").IPCEvents;let injectedGetWindow=e=>null;function injectGetWindow(e){injectedGetWindow=e}electron.ipcMain.handle(WINDOW_FLASH_FRAME,async(e,n)=>{const W=injectedGetWindow();null!=W&&null!=W.flashFrame&&W.flashFrame(!W.isFocused()&&n)}),electron.ipcMain.handle(WINDOW_MINIMIZE,async(e,n)=>{const W=injectedGetWindow(n);null!=W&&W.minimize()}),electron.ipcMain.handle(WINDOW_RESTORE,async(e,n)=>{const W=injectedGetWindow(n);null!=W&&W.restore()}),electron.ipcMain.handle(WINDOW_MAXIMIZE,async(e,n)=>{const W=injectedGetWindow(n);null!=W&&(W.isMaximized()?W.unmaximize():W.maximize())}),electron.ipcMain.handle(WINDOW_FOCUS,async(e,n)=>{const W=injectedGetWindow(n);null!=W&&W.show()}),electron.ipcMain.handle(WINDOW_SET_ALWAYS_ON_TOP,async(e,n,W)=>{const t=injectedGetWindow(n);null!=t&&t.setAlwaysOnTop(W)}),electron.ipcMain.handle(WINDOW_IS_ALWAYS_ON_TOP,async(e,n)=>{const W=injectedGetWindow(n);return null!=W&&W.isAlwaysOnTop()}),electron.ipcMain.handle(WINDOW_BLUR,async(e,n)=>{const W=injectedGetWindow(n);null==W||W.isDestroyed()||W.blur()}),electron.ipcMain.handle(WINDOW_SET_PROGRESS_BAR,async(e,n,W)=>{const t=injectedGetWindow(n);null!=t&&t.setProgressBar(W)}),electron.ipcMain.handle(WINDOW_TOGGLE_FULLSCREEN,async(e,n)=>{const W=injectedGetWindow(n);W.setFullScreen(!W.isFullScreen())}),electron.ipcMain.handle(WINDOW_CLOSE,async(e,n)=>{if(null==n&&"darwin"===process.platform)electron.Menu.sendActionToFirstResponder("hide:");else{const e=injectedGetWindow(n);if(null==e)return;e.close()}}),electron.ipcMain.handle(WINDOW_SET_BACKGROUND_THROTTLING,async(e,n)=>{const W=injectedGetWindow();null!=W&&W.webContents.setBackgroundThrottling(n)});