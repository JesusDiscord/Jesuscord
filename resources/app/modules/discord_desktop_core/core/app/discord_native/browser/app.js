"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.injectBuildInfo=injectBuildInfo,exports.injectModuleUpdater=injectModuleUpdater,exports.injectUpdater=injectUpdater;const electron=require("electron"),{APP_GET_RELEASE_CHANNEL_SYNC:APP_GET_RELEASE_CHANNEL_SYNC,APP_GET_HOST_VERSION_SYNC:APP_GET_HOST_VERSION_SYNC,APP_GET_MODULE_VERSIONS:APP_GET_MODULE_VERSIONS,APP_GET_PATH:APP_GET_PATH,APP_SET_BADGE_COUNT:APP_SET_BADGE_COUNT,APP_DOCK_SET_BADGE:APP_DOCK_SET_BADGE,APP_DOCK_BOUNCE:APP_DOCK_BOUNCE,APP_DOCK_CANCEL_BOUNCE:APP_DOCK_CANCEL_BOUNCE,APP_RELAUNCH:APP_RELAUNCH,APP_GET_DEFAULT_DOUBLE_CLICK_ACTION:APP_GET_DEFAULT_DOUBLE_CLICK_ACTION}=require("../common/constants").IPCEvents;let injectedBuildInfo=null,injectedModuleUpdater=null,injectedUpdater=null;function injectBuildInfo(e){injectedBuildInfo=e}function injectModuleUpdater(e){injectedModuleUpdater=e}function injectUpdater(e){injectedUpdater=e}async function newUpdaterGetModuleVersions(e){return(await e.queryCurrentVersions()).current_modules}electron.ipcMain.on(APP_GET_RELEASE_CHANNEL_SYNC,e=>{e.returnValue=injectedBuildInfo.releaseChannel}),electron.ipcMain.on(APP_GET_HOST_VERSION_SYNC,e=>{e.returnValue=electron.app.getVersion()}),electron.ipcMain.handle(APP_GET_MODULE_VERSIONS,async e=>{var n;const t=null===(n=injectedUpdater)||void 0===n?void 0:n.getUpdater();if(null!=t)return newUpdaterGetModuleVersions(t);const _={},c=null!=injectedModuleUpdater?injectedModuleUpdater.getInstalled():{};for(const e of Object.keys(c))_[e]=c[e].installedVersion;return _}),electron.ipcMain.handle(APP_GET_PATH,async(e,n)=>electron.app.getPath(n)),electron.ipcMain.handle(APP_SET_BADGE_COUNT,async(e,n)=>{electron.app.setBadgeCount(n)}),electron.ipcMain.handle(APP_DOCK_SET_BADGE,async(e,n)=>{null!=electron.app.dock&&electron.app.dock.setBadge(n)}),electron.ipcMain.handle(APP_DOCK_BOUNCE,async(e,n)=>null!=electron.app.dock?electron.app.dock.bounce(n):-1),electron.ipcMain.handle(APP_DOCK_CANCEL_BOUNCE,async(e,n)=>{null!=electron.app.dock&&electron.app.dock.cancelBounce(n)}),electron.ipcMain.handle(APP_RELAUNCH,async e=>{electron.app.relaunch(),electron.app.exit(0)}),electron.ipcMain.handle(APP_GET_DEFAULT_DOUBLE_CLICK_ACTION,async e=>electron.systemPreferences.getUserDefault("AppleActionOnDoubleClick","string"));