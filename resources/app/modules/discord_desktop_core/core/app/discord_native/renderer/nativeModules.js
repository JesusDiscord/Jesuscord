"use strict";const electron=require("electron"),{NATIVE_MODULES_GET_PATHS:NATIVE_MODULES_GET_PATHS,NATIVE_MODULES_INSTALL:NATIVE_MODULES_INSTALL,NATIVE_MODULES_GET_HAS_NEW_UPDATER:NATIVE_MODULES_GET_HAS_NEW_UPDATER}=require("../common/constants").IPCEvents,modulePromises={};function getSanitizedModulePaths(){let e=[];const{mainAppDirname:r,browserModulePaths:t}=electron.ipcRenderer.sendSync(NATIVE_MODULES_GET_PATHS);t.forEach(r=>{r.includes("electron.asar")||e.push(r)});const n=require("module")._nodeModulePaths(r);return e=e.concat(n.slice(0,2)),e}function getHasNewUpdater(){return electron.ipcRenderer.sendSync(NATIVE_MODULES_GET_HAS_NEW_UPDATER)}async function ensureModule(e){let r=modulePromises[e];null==r&&(r=electron.ipcRenderer.invoke(NATIVE_MODULES_INSTALL,e)),await r,module.paths=getSanitizedModulePaths()}function requireModule(e){if(!/^discord_[a-z0-9_-]+$/.test(e)&&"erlpack"!==e)throw new Error('"'+String(e)+'" is not a whitelisted native module');return require("../../../../../"+e)}module.paths=getSanitizedModulePaths(),module.exports={ensureModule:ensureModule,requireModule:requireModule,canBootstrapNewUpdater:!getHasNewUpdater()};