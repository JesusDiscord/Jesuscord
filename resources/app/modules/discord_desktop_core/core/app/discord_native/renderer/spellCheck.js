"use strict";const electron=require("electron"),EventEmitter=require("events"),{getElectronMajorVersion:getElectronMajorVersion}=require("../../../common/processUtils"),{SPELLCHECK_RESULT:SPELLCHECK_RESULT,SPELLCHECK_REPLACE_MISSPELLING:SPELLCHECK_REPLACE_MISSPELLING,SPELLCHECK_GET_AVAILABLE_DICTIONARIES:SPELLCHECK_GET_AVAILABLE_DICTIONARIES,SPELLCHECK_SET_LOCALE:SPELLCHECK_SET_LOCALE,SPELLCHECK_SET_LEARNED_WORDS:SPELLCHECK_SET_LEARNED_WORDS}=require("../common/constants").IPCEvents;if(getElectronMajorVersion()<8){async function setSpellCheckProvider(e,n,r){const E={spellCheck:(e,n)=>n(e.filter(e=>!r.spellCheck(e)))};electron.webFrame.setSpellCheckProvider(e,E)}async function replaceMisspelling(e){electron.ipcRenderer.invoke(SPELLCHECK_REPLACE_MISSPELLING,e)}module.exports={setSpellCheckProvider:setSpellCheckProvider,replaceMisspelling:replaceMisspelling}}else{const e=new EventEmitter;function handleSpellcheckData(n,r,E){e.emit("spellcheck-result",r,E)}function on(){e.on.apply(e,arguments)}function removeListener(){e.removeListener.apply(e,arguments)}async function getAvailableDictionaries(){return electron.ipcRenderer.invoke(SPELLCHECK_GET_AVAILABLE_DICTIONARIES)}async function setLocale(e){let n=!0;try{await electron.ipcRenderer.invoke(SPELLCHECK_SET_LOCALE,e)}catch(e){n=!1}return n}async function setLearnedWords(e){return electron.ipcRenderer.invoke(SPELLCHECK_SET_LEARNED_WORDS,e)}async function replaceMisspelling(e){return electron.ipcRenderer.invoke(SPELLCHECK_REPLACE_MISSPELLING,e)}electron.ipcRenderer.on(SPELLCHECK_RESULT,handleSpellcheckData),module.exports={on:on,removeListener:removeListener,getAvailableDictionaries:getAvailableDictionaries,setLocale:setLocale,setLearnedWords:setLearnedWords,replaceMisspelling:replaceMisspelling}}