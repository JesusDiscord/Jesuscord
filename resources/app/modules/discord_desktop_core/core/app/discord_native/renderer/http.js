"use strict";const electron=require("electron"),http=require("http"),https=require("https"),{CONSTANTS_GET:CONSTANTS_GET}=require("../common/constants").IPCEvents;async function getAPIEndpoint(){const t=await electron.ipcRenderer.invoke(CONSTANTS_GET,"API_ENDPOINT");return null==t||""===t?null:t}async function makeChunkedRequest(t,e,n){const{method:o,chunkInterval:r,token:s,contentType:a}=n;let i=http;t.startsWith("https")&&(i=https);const u=await getAPIEndpoint();if(null==u)throw new Error("missing api endpoint setting");const h=new URL(u),c=new URL(t,u);return c.protocol=h.protocol,c.host=h.host,c.pathname.startsWith(h.pathname)||(c.pathname=`${h.pathname}${c.pathname}`),new Promise(async(t,n)=>{let u;const h=i.request(c.toString(),{method:o,headers:{authorization:s,"Content-Type":a,"Content-Length":Buffer.byteLength(e.join(""))}},e=>{let n="";e.setEncoding("utf8"),e.on("data",t=>{n+=t}),e.on("end",()=>{t({status:e.statusCode,body:n})})});h.on("error",t=>{null!=u&&clearTimeout(u),n(t)});for(let t=0;t<e.length;t++)await new Promise(n=>{h.write(e[t],()=>{u=setTimeout(n,r)})});h.end()})}module.exports={getAPIEndpoint:getAPIEndpoint,makeChunkedRequest:function(t,e,n,o){makeChunkedRequest(t,e,n).then(t=>o(null,t)).catch(t=>o(t))}};