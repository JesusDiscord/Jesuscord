"use strict"; var __createBinding = this && this.__createBinding || (Object.create ? function (t, e, i, n) { void 0 === n && (n = i), Object.defineProperty(t, n, { enumerable: !0, get: function () { return e[i] } }) } : function (t, e, i, n) { void 0 === n && (n = i), t[n] = e[i] }), __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (t, e) { Object.defineProperty(t, "default", { enumerable: !0, value: e }) } : function (t, e) { t.default = e }), __importStar = this && this.__importStar || function (t) { if (t && t.__esModule) return t; var e = {}; if (null != t) for (var i in t) "default" !== i && Object.hasOwnProperty.call(t, i) && __createBinding(e, t, i); return __setModuleDefault(e, t), e }, __importDefault = this && this.__importDefault || function (t) { return t && t.__esModule ? t : { default: t } }; Object.defineProperty(exports, "__esModule", { value: !0 }), exports.init = exports.getSettings = void 0; const electron_1 = require("electron"), Settings_1 = __importDefault(require("./common/Settings")), fs = __importStar(require("fs")); let settings; function getSettings() { return settings || (init(), settings) } function init() { fs.mkdirSync(electron_1.app.getPath("userData"), { recursive: !0 }), settings = new Settings_1.default(electron_1.app.getPath("userData")) } exports.default = Object.assign(getSettings, { init: init, getSettings: getSettings }), exports.getSettings = getSettings, exports.init = init;