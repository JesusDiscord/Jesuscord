const ipcRenderer=require("electron").ipcRenderer;if("win32"===process.platform){let e=!1;const i=window.Notification;ipcRenderer.send("NOTIFICATIONS_CLEAR");const t={};ipcRenderer.on("NOTIFICATION_CLICK",(e,i)=>{var s=t[i];s&&(s.onclick(),s.close())});class s{constructor(e,i){this.id=s._id++,this.onshow=function(){},this.onclick=function(){},this.onclose=function(){},this.title=e,this.body=i.body,this.icon=i.icon,setTimeout(()=>this.onshow(),0),t[this.id]=this,ipcRenderer.send("NOTIFICATION_SHOW",{id:this.id,title:this.title,body:this.body,icon:this.icon,theme:settingStore?settingStore.default.theme:"dark"})}static _id=0;static requestPermission(e){e()}close(){t[this.id]&&(delete t[this.id],ipcRenderer.send("NOTIFICATION_CLOSE",this.id),this.onclose())}}function Notification(){return e?new s(...arguments):new i(...arguments)}s.permission="granted",Object.defineProperties(Notification,{permission:{get:()=>e?s.permission:i.permission},requestPermission:{get:()=>e?s.requestPermission:i.requestPermission},_id:{get:()=>e?s._id:i._id}}),window.Notification=Notification,module.exports={useShim(i){e=!!i}}}else module.exports={useShim(){}};let settingStore;ensureExported(e=>e.default&&e.default.theme).then(e=>{settingStore=e,ipcRenderer.send("DISCORD_UPDATE_THEME",e.default.theme)}).catch(console.error);